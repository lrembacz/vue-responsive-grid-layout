{"version":3,"file":"vue-responsive-grid-layout.common.js","sources":["../../../node_modules/lodash.isequal/index.js","../src/lib/utils.ts","../src/lib/calculateUtils.ts","../src/VueGridItem.vue","../../../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/VueGridLayoutProps.ts","../src/VueGridLayout.vue","../src/lib/responsiveUtils.ts","../src/VueResponsiveGridLayout.vue","../src/WidthProvider.ts"],"sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","import Vue from 'vue';\r\n\r\nexport type LayoutItem = {\r\n    w: number;\r\n    h: number;\r\n    x: number;\r\n    y: number;\r\n    i: string;\r\n    minW?: number;\r\n    minH?: number;\r\n    maxW?: number;\r\n    maxH?: number;\r\n    moved?: boolean;\r\n    static?: boolean;\r\n    isDraggable?: boolean;\r\n    isResizable?: boolean;\r\n    resizeHandles?: Array<'s' | 'w' | 'e' | 'n' | 'sw' | 'nw' | 'se' | 'ne'>;\r\n    isBounded?: boolean;\r\n};\r\nexport type Layout = LayoutItem[];\r\n\r\nexport type Position = {\r\n    left: number;\r\n    top: number;\r\n    width: number;\r\n    height: number;\r\n};\r\nexport type VueDraggableCallbackData = {\r\n    node: HTMLElement;\r\n    x?: number;\r\n    y?: number;\r\n    deltaX: number;\r\n    deltaY: number;\r\n    lastX?: number;\r\n    lastY?: number;\r\n};\r\n\r\nexport type PartialPosition = { left: number; top: number };\r\nexport type DroppingPosition = { left: number; top: number; e: Event };\r\nexport type Size = { width: number; height: number };\r\nexport type GridDragEvent = {\r\n    e: Event;\r\n    node: HTMLElement;\r\n    newPosition: PartialPosition;\r\n};\r\nexport type GridResizeEvent = { e: Event; node: HTMLElement; size: Size };\r\nexport type DragOverEvent = MouseEvent & {\r\n    nativeEvent: {\r\n        layerX: number;\r\n        layerY: number;\r\n        target: {\r\n            className: String;\r\n        };\r\n    };\r\n};\r\n\r\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\r\nexport type EventCallback = (\r\n    layout: Layout,\r\n    oldItem?: LayoutItem,\r\n    newItem?: LayoutItem,\r\n    placeholder?: LayoutItem,\r\n    event?: Event,\r\n    element?: HTMLElement\r\n) => void;\r\n\r\nexport enum CompactType {\r\n    horizontal = 'horizontal',\r\n    vertical = 'vertical'\r\n}\r\n\r\nconst isProduction = process.env.NODE_ENV === 'production';\r\nconst DEBUG = false;\r\n\r\n/**\r\n * Return the bottom coordinate of the layout.\r\n *\r\n * @param  {Array} layout Layout array.\r\n * @return {Number}       Bottom coordinate.\r\n */\r\nexport function bottom(layout: Layout): number {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        bottomY = layout[i].y + layout[i].h;\r\n        if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function cloneLayout(layout: Layout): Layout {\r\n    const newLayout = Array(layout.length);\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        newLayout[i] = cloneLayoutItem(layout[i]);\r\n    }\r\n    return newLayout;\r\n}\r\n\r\n// Fast path to cloning, since this is monomorphic\r\nexport function cloneLayoutItem(layoutItem: LayoutItem): LayoutItem {\r\n    return {\r\n        w: layoutItem.w,\r\n        h: layoutItem.h,\r\n        x: layoutItem.x,\r\n        y: layoutItem.y,\r\n        i: layoutItem.i,\r\n        minW: layoutItem.minW,\r\n        maxW: layoutItem.maxW,\r\n        minH: layoutItem.minH,\r\n        maxH: layoutItem.maxH,\r\n        moved: Boolean(layoutItem.moved),\r\n        static: Boolean(layoutItem.static),\r\n        // These can be null/undefined\r\n        isDraggable: layoutItem.isDraggable,\r\n        isResizable: layoutItem.isResizable,\r\n        resizeHandles: layoutItem.resizeHandles,\r\n        isBounded: layoutItem.isBounded\r\n    };\r\n}\r\n\r\n/**\r\n * Given two layoutitems, check if they collide.\r\n */\r\nexport function collides(l1: LayoutItem, l2: LayoutItem): boolean {\r\n    if (l1.i === l2.i) return false; // same element\r\n    if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\r\n    if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\r\n    if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\r\n    if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n}\r\n\r\n/**\r\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\r\n * between items.\r\n *\r\n * Does not modify layout items (clones). Creates a new layout array.\r\n *\r\n * @param  {Array} layout Layout.\r\n * @param compactType\r\n * @param cols\r\n *   vertically.\r\n * @return {Array}       Compacted Layout.\r\n */\r\nexport function compact(layout: Layout, compactType: CompactType, cols: number): Layout {\r\n    // Statics go in the compareWith array right away so items flow around them.\r\n    const compareWith = getStatics(layout);\r\n    // We go through the items by row and column.\r\n    const sorted = sortLayoutItems(layout, compactType);\r\n    // Holding for new items.\r\n    const out = Array(layout.length);\r\n\r\n    for (let i = 0, len = sorted.length; i < len; i++) {\r\n        let l = cloneLayoutItem(sorted[i]);\r\n\r\n        // Don't move static elements\r\n        if (!l.static) {\r\n            l = compactItem(compareWith, l, compactType, cols, sorted);\r\n\r\n            // Add to comparison array. We only collide with items before this one.\r\n            // Statics are already in this array.\r\n            compareWith.push(l);\r\n        }\r\n\r\n        // Add to output array to make sure they still come out in the right order.\r\n        out[layout.indexOf(sorted[i])] = l;\r\n\r\n        // Clear moved flag, if it exists.\r\n        l.moved = false;\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nconst heightWidth = { x: 'w', y: 'h' };\r\n\r\n/**\r\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\r\n */\r\nfunction resolveCompactionCollision(layout: Layout, item: LayoutItem, moveToCoord: number, axis: 'x' | 'y') {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.i;\r\n        })\r\n        .indexOf(item.i);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static) continue;\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) break;\r\n\r\n        if (collides(item, otherItem)) {\r\n            resolveCompactionCollision(layout, otherItem, moveToCoord + (item as any)[sizeProp], axis);\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n}\r\n\r\n/**\r\n * Compact an item in the layout.\r\n *\r\n * Modifies item.\r\n *\r\n */\r\nexport function compactItem(\r\n    compareWith: Layout,\r\n    l: LayoutItem,\r\n    compactType: CompactType,\r\n    cols: number,\r\n    fullLayout: Layout\r\n): LayoutItem {\r\n    const compactV = compactType === 'vertical';\r\n    const compactH = compactType === 'horizontal';\r\n    if (compactV) {\r\n        // Bottom 'y' possible is the bottom of the layout.\r\n        // This allows you to do nice stuff like specify {y: Infinity}\r\n        // This is here because the layout must be sorted in order to get the correct bottom `y`.\r\n        l.y = Math.min(bottom(compareWith), l.y);\r\n        // Move the element up as far as it can go without colliding.\r\n        while (l.y > 0 && !getFirstCollision(compareWith, l)) {\r\n            l.y--;\r\n        }\r\n    } else if (compactH) {\r\n        l.y = Math.min(bottom(compareWith), l.y);\r\n        // Move the element left as far as it can go without colliding.\r\n        while (l.x > 0 && !getFirstCollision(compareWith, l)) {\r\n            l.x--;\r\n        }\r\n    }\r\n\r\n    // Move it down, and keep moving it down if it's colliding.\r\n    let collides;\r\n    while ((collides = getFirstCollision(compareWith, l))) {\r\n        if (compactH) {\r\n            resolveCompactionCollision(fullLayout, l, collides.x + collides.w, 'x');\r\n        } else {\r\n            resolveCompactionCollision(fullLayout, l, collides.y + collides.h, 'y');\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if (compactH && l.x + l.w > cols) {\r\n            l.x = cols - l.w;\r\n            l.y++;\r\n        }\r\n    }\r\n    return l;\r\n}\r\n\r\n/**\r\n * Given a layout, make sure all elements fit within its bounds.\r\n *\r\n * Modifies layout items.\r\n *\r\n * @param  {Array} layout Layout array.\r\n * @param  {Number} bounds Number of columns.\r\n */\r\nexport function correctBounds(layout: Layout, bounds: { cols: number }): Layout {\r\n    const collidesWith = getStatics(layout);\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        const l = layout[i];\r\n        // Overflows right\r\n        if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\r\n        // Overflows left\r\n        if (l.x < 0) {\r\n            l.x = 0;\r\n            l.w = bounds.cols;\r\n        }\r\n        if (!l.static) collidesWith.push(l);\r\n        else {\r\n            // If this is static and collides with other statics, we must move it down.\r\n            // We have to do something nicer than just letting them overlap.\r\n            while (getFirstCollision(collidesWith, l)) {\r\n                l.y++;\r\n            }\r\n        }\r\n    }\r\n    return layout;\r\n}\r\n\r\n/**\r\n * Get a layout item by ID. Used so we can override later on if necessary.\r\n *\r\n * @param  {Array}  layout Layout array.\r\n * @param  {String} id     ID\r\n * @return {LayoutItem}    Item at ID.\r\n */\r\nexport function getLayoutItem(layout: Layout, id: string): LayoutItem | undefined {\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        if (layout[i].i === id) return layout[i];\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the first item this layout collides with.\r\n * It doesn't appear to matter which order we approach this from, although\r\n * perhaps that is the wrong thing to do.\r\n *\r\n * @param layout\r\n * @param  {Object} layoutItem Layout item.\r\n * @return {Object|undefined}  A colliding layout item, or undefined.\r\n */\r\nexport function getFirstCollision(layout: Layout, layoutItem: LayoutItem): LayoutItem | undefined {\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        if (collides(layout[i], layoutItem)) return layout[i];\r\n    }\r\n}\r\n\r\nexport function getAllCollisions(layout: Layout, layoutItem: LayoutItem): Array<LayoutItem> {\r\n    return layout.filter(l => collides(l, layoutItem));\r\n}\r\n\r\n/**\r\n * Get all static elements.\r\n * @param  {Array} layout Array of layout objects.\r\n * @return {Array}        Array of static layout items..\r\n */\r\nexport function getStatics(layout: Layout): Array<LayoutItem> {\r\n    return layout.filter(l => l.static);\r\n}\r\n\r\n/**\r\n * Move an element. Responsible for doing cascading movements of other elements.\r\n *\r\n * Modifies layout items.\r\n *\r\n * @param  {Array}      layout            Full layout to modify.\r\n * @param  {LayoutItem} l                 element to move.\r\n * @param  {Number}     [x]               X position in grid units.\r\n * @param  {Number}     [y]               Y position in grid units.\r\n * @param isUserAction\r\n * @param preventCollision\r\n * @param compactType\r\n * @param cols\r\n */\r\nexport function moveElement(\r\n    layout: Layout,\r\n    l: LayoutItem,\r\n    x: number | undefined,\r\n    y: number | undefined,\r\n    isUserAction: boolean | undefined,\r\n    preventCollision: boolean | undefined,\r\n    compactType: CompactType,\r\n    cols: number\r\n): Layout {\r\n    // If this is static and not explicitly enabled as draggable,\r\n    // no move is possible, so we can short-circuit this immediately.\r\n    if (l.static && l.isDraggable !== true) return layout;\r\n\r\n    // Short-circuit if nothing to do.\r\n    if (l.y === y && l.x === x) return layout;\r\n\r\n    log(`Moving element ${l.i} to [${String(x)},${String(y)}] from [${l.x},${l.y}]`);\r\n    const oldX = l.x;\r\n    const oldY = l.y;\r\n\r\n    // This is quite a bit faster than extending the object\r\n    if (typeof x === 'number') l.x = x;\r\n    if (typeof y === 'number') l.y = y;\r\n    l.moved = true;\r\n\r\n    // If this collides with anything, move it.\r\n    // When doing this comparison, we have to sort the items we compare with\r\n    // to ensure, in the case of multiple collisions, that we're getting the\r\n    // nearest collision.\r\n    let sorted = sortLayoutItems(layout, compactType);\r\n    const movingUp =\r\n        compactType === 'vertical' && typeof y === 'number'\r\n            ? oldY >= y\r\n            : compactType === 'horizontal' && typeof x === 'number'\r\n            ? oldX >= x\r\n            : false;\r\n    if (movingUp) sorted = sorted.reverse();\r\n    const collisions = getAllCollisions(sorted, l);\r\n\r\n    // There was a collision; abort\r\n    if (preventCollision && collisions.length) {\r\n        log(`Collision prevented on ${l.i}, reverting.`);\r\n        l.x = oldX;\r\n        l.y = oldY;\r\n        l.moved = false;\r\n        return layout;\r\n    }\r\n\r\n    // Move each item that collides away from this element.\r\n    for (let i = 0, len = collisions.length; i < len; i++) {\r\n        const collision = collisions[i];\r\n        log(\r\n            `Resolving collision between ${l.i} at [${l.x},${l.y}] and ${collision.i} at [${collision.x},${collision.y}]`\r\n        );\r\n\r\n        // Short circuit so we can't infinite loop\r\n        if (collision.moved) continue;\r\n\r\n        // Don't move static items - we have to move *this* element away\r\n        if (collision.static) {\r\n            layout = moveElementAwayFromCollision(layout, collision, l, isUserAction, compactType, cols);\r\n        } else {\r\n            layout = moveElementAwayFromCollision(layout, l, collision, isUserAction, compactType, cols);\r\n        }\r\n    }\r\n\r\n    return layout;\r\n}\r\n\r\n/**\r\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\r\n * We attempt to move it up if there's room, otherwise it goes below.\r\n *\r\n * @param  {Array} layout            Full layout to modify.\r\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\r\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\r\n * @param isUserAction\r\n * @param compactType\r\n * @param cols\r\n */\r\nexport function moveElementAwayFromCollision(\r\n    layout: Layout,\r\n    collidesWith: LayoutItem,\r\n    itemToMove: LayoutItem,\r\n    isUserAction: boolean | undefined,\r\n    compactType: CompactType,\r\n    cols: number\r\n): Layout {\r\n    const compactH = compactType === 'horizontal';\r\n    // Compact vertically if not set to horizontal\r\n    const compactV = compactType !== 'horizontal';\r\n    const preventCollision = collidesWith.static; // we're already colliding (not for static items)\r\n\r\n    // If there is enough space above the collision to put this element, move it there.\r\n    // We only do this on the main collision as this can get funky in cascades and cause\r\n    // unwanted swapping behavior.\r\n    if (isUserAction) {\r\n        // Reset isUserAction flag because we're not in the main collision anymore.\r\n        isUserAction = false;\r\n\r\n        // Make a mock item so we don't modify the item here, only modify in moveElement.\r\n        const fakeItem: LayoutItem = {\r\n            x: compactH ? Math.max(collidesWith.x - itemToMove.w, 0) : itemToMove.x,\r\n            y: compactV ? Math.max(collidesWith.y - itemToMove.h, 0) : itemToMove.y,\r\n            w: itemToMove.w,\r\n            h: itemToMove.h,\r\n            i: '-1'\r\n        };\r\n\r\n        // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\r\n        if (!getFirstCollision(layout, fakeItem)) {\r\n            log(`Doing reverse collision on ${itemToMove.i} up to [${fakeItem.x},${fakeItem.y}].`);\r\n            return moveElement(\r\n                layout,\r\n                itemToMove,\r\n                compactH ? fakeItem.x : undefined,\r\n                compactV ? fakeItem.y : undefined,\r\n                isUserAction,\r\n                preventCollision,\r\n                compactType,\r\n                cols\r\n            );\r\n        }\r\n    }\r\n\r\n    return moveElement(\r\n        layout,\r\n        itemToMove,\r\n        compactH ? itemToMove.x + 1 : undefined,\r\n        compactV ? itemToMove.y + 1 : undefined,\r\n        isUserAction,\r\n        preventCollision,\r\n        compactType,\r\n        cols\r\n    );\r\n}\r\n\r\n/**\r\n * Helper to convert a number to a percentage string.\r\n *\r\n * @param  {Number} num Any number\r\n * @return {String}     That number as a percentage.\r\n */\r\nexport function perc(num: number): string {\r\n    return num * 100 + '%';\r\n}\r\n\r\nexport function setTransform({ top, left, width, height }: Position): Object {\r\n    // Replace unitless items with px\r\n    const translate = `translate(${left}px,${top}px)`;\r\n    return {\r\n        transform: translate,\r\n        WebkitTransform: translate,\r\n        MozTransform: translate,\r\n        msTransform: translate,\r\n        OTransform: translate,\r\n        width: `${width}px`,\r\n        height: `${height}px`,\r\n        position: 'absolute'\r\n    };\r\n}\r\n\r\nexport function setTopLeft({ top, left, width, height }: Position): Object {\r\n    return {\r\n        top: `${top}px`,\r\n        left: `${left}px`,\r\n        width: `${width}px`,\r\n        height: `${height}px`,\r\n        position: 'absolute'\r\n    };\r\n}\r\n\r\n/**\r\n * Get layout items sorted from top left to right and down.\r\n *\r\n * @return {Array} Array of layout objects.\r\n * @return {Array}        Layout, sorted static items first.\r\n */\r\nexport function sortLayoutItems(layout: Layout, compactType: CompactType): Layout {\r\n    if (compactType === 'horizontal') return sortLayoutItemsByColRow(layout);\r\n    else return sortLayoutItemsByRowCol(layout);\r\n}\r\n\r\n/**\r\n * Sort layout items by row ascending and column ascending.\r\n *\r\n * Does not modify Layout.\r\n */\r\nexport function sortLayoutItemsByRowCol(layout: Layout): Layout {\r\n    // Slice to clone array as sort modifies\r\n    return layout.slice(0).sort(function(a, b) {\r\n        if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n            return 1;\r\n        } else if (a.y === b.y && a.x === b.x) {\r\n            // Without this, we can get different sort results in IE vs. Chrome/FF\r\n            return 0;\r\n        }\r\n        return -1;\r\n    });\r\n}\r\n\r\n/**\r\n * Sort layout items by column ascending then row ascending.\r\n *\r\n * Does not modify Layout.\r\n */\r\nexport function sortLayoutItemsByColRow(layout: Layout): Layout {\r\n    return layout.slice(0).sort(function(a, b) {\r\n        if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n            return 1;\r\n        }\r\n        return -1;\r\n    });\r\n}\r\n\r\n/**\r\n * Generate a layout using the initialLayout and children as a template.\r\n * Missing entries will be added, extraneous ones will be truncated.\r\n *\r\n * Does not modify initialLayout.\r\n *\r\n * @param  {Array}  initialLayout Layout passed in through props.\r\n * @param {Array} children\r\n * @param cols\r\n * @param compactType\r\n * @return {Array}                Working layout.\r\n */\r\nexport function synchronizeLayoutWithChildren(\r\n    initialLayout: Layout,\r\n    children: Vue[],\r\n    cols: number,\r\n    compactType: CompactType\r\n): Layout {\r\n    initialLayout = initialLayout || [];\r\n\r\n    // Generate one layout item per child.\r\n    const layout: LayoutItem[] = [];\r\n    children.forEach((child: Vue, i: number) => {\r\n        if (child.$props.i === 'placeholder') {\r\n            return;\r\n        }\r\n        // Don't overwrite if it already exists.\r\n        const exists = getLayoutItem(initialLayout, String(child.$props.i));\r\n        if (exists) {\r\n            layout[i] = cloneLayoutItem(exists);\r\n        } else {\r\n            const g = child.$attrs['data-grid'];\r\n\r\n            // Hey, this item has a data-grid property, use it.\r\n            if (g) {\r\n                if (!isProduction) {\r\n                    // @ts-ignore\r\n                    validateLayout([g], 'VueGridLayout.$children');\r\n                }\r\n                // @ts-ignore\r\n                layout[i] = cloneLayoutItem({ ...g, i: child.$props.i });\r\n            } else {\r\n                // Nothing provided: ensure this is added to the bottom\r\n                layout[i] = cloneLayoutItem({\r\n                    w: 1,\r\n                    h: 1,\r\n                    x: 0,\r\n                    y: bottom(layout),\r\n                    i: String(child.$props.i)\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    // Correct the layout.\r\n    const correctedLayout = correctBounds(layout, { cols: cols });\r\n    return compact(correctedLayout, compactType, cols);\r\n}\r\n\r\n/**\r\n * Validate a layout. Throws errors.\r\n *\r\n * @param  {Array}  layout        Array of layout items.\r\n * @param  {String} [contextName] Context name for errors.\r\n * @throw  {Error}                Validation error.\r\n */\r\nexport function validateLayout(layout: Layout, contextName: string = 'Layout'): void {\r\n    const subProps = ['x', 'y', 'w', 'h'];\r\n    if (!Array.isArray(layout)) throw new Error(contextName + ' must be an array!');\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        const item = layout[i];\r\n        for (let j = 0; j < subProps.length; j++) {\r\n            if (typeof (item as any)[subProps[j]] !== 'number') {\r\n                throw new Error('VueGridLayout: ' + contextName + '[' + i + '].' + subProps[j] + ' must be a number!');\r\n            }\r\n        }\r\n        if (item.i && typeof item.i !== 'string') {\r\n            throw new Error('VueGridLayout: ' + contextName + '[' + i + '].i must be a string!');\r\n        }\r\n        if (item.static !== undefined && typeof item.static !== 'boolean') {\r\n            throw new Error('VueGridLayout: ' + contextName + '[' + i + '].static must be a boolean!');\r\n        }\r\n    }\r\n}\r\n\r\nfunction log(...args: any[]) {\r\n    if (DEBUG) console.log(...args);\r\n}\r\n\r\nexport const noop = () => {};\r\n","import { Position } from './utils';\r\n\r\nexport type PositionParams = {\r\n    margin: [number, number];\r\n    containerPadding: [number, number];\r\n    containerWidth: number;\r\n    cols: number;\r\n    rowHeight: number;\r\n    maxRows: number;\r\n};\r\n\r\n// Helper for generating column width\r\nexport function calcGridColWidth(positionParams: PositionParams): number {\r\n    return (\r\n        (positionParams.containerWidth -\r\n            positionParams.margin[0] * (positionParams.cols - 1) -\r\n            positionParams.containerPadding[0] * 2) /\r\n        positionParams.cols\r\n    );\r\n}\r\n\r\n// This can either be called:\r\n// calcGridItemWHPx(w, colWidth, margin[0])\r\n// or\r\n// calcGridItemWHPx(h, rowHeight, margin[1])\r\nexport function calcGridItemWHPx(gridUnits: number, colOrRowSize: number, marginPx: number) {\r\n    // 0 * Infinity === NaN, which causes problems with resize contraints\r\n    if (!Number.isFinite(gridUnits)) return gridUnits;\r\n    return Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);\r\n}\r\n\r\n/**\r\n * Return position on the page given an x, y, w, h.\r\n * left, top, width, height are all in pixels.\r\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calculations.\r\n * @param  {Number}  x                      X coordinate in grid units.\r\n * @param  {Number}  y                      Y coordinate in grid units.\r\n * @param  {Number}  w                      W coordinate in grid units.\r\n * @param  {Number}  h                      H coordinate in grid units.\r\n * @param state\r\n * @return {Position}                       Object containing coords.\r\n */\r\nexport function calcGridItemPosition(\r\n    positionParams: PositionParams,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n    state?: any\r\n): Position {\r\n    const { margin, containerPadding, rowHeight } = positionParams;\r\n    const colWidth = calcGridColWidth(positionParams);\r\n    const out: Partial<Position> = {};\r\n\r\n    // If resizing, use the exact width and height as returned from resizing callbacks.\r\n    if (state && state.resizing) {\r\n        out.width = Math.round(state.resizing.width);\r\n        out.height = Math.round(state.resizing.height);\r\n    }\r\n    // Otherwise, calculate from grid units.\r\n    else {\r\n        out.width = calcGridItemWHPx(w, colWidth, margin[0]);\r\n        out.height = calcGridItemWHPx(h, rowHeight, margin[1]);\r\n    }\r\n\r\n    // If dragging, use the exact width and height as returned from dragging callbacks.\r\n    if (state && state.dragging) {\r\n        out.top = Math.round(state.dragging.top);\r\n        out.left = Math.round(state.dragging.left);\r\n    }\r\n    // Otherwise, calculate from grid units.\r\n    else {\r\n        out.top = Math.round((rowHeight + margin[1]) * y + containerPadding[1]);\r\n        out.left = Math.round((colWidth + margin[0]) * x + containerPadding[0]);\r\n    }\r\n\r\n    return out as Position;\r\n}\r\n\r\n/**\r\n * Translate x and y coordinates from pixels to grid units.\r\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calculations.\r\n * @param  {Number} top                     Top position (relative to parent) in pixels.\r\n * @param  {Number} left                    Left position (relative to parent) in pixels.\r\n * @param  {Number} w                       W coordinate in grid units.\r\n * @param  {Number} h                       H coordinate in grid units.\r\n * @return {Object}                         x and y in grid units.\r\n */\r\nexport function calcXY(\r\n    positionParams: PositionParams,\r\n    top: number,\r\n    left: number,\r\n    w: number,\r\n    h: number\r\n): { x: number; y: number } {\r\n    const colWidth = calcGridColWidth(positionParams);\r\n\r\n    // left = colWidth * x + margin * (x + 1)\r\n    // l = cx + m(x+1)\r\n    // l = cx + mx + m\r\n    // l - m = cx + mx\r\n    // l - m = x(c + m)\r\n    // (l - m) / (c + m) = x\r\n    // x = (left - margin) / (coldWidth + margin)\r\n    let x = Math.round((left - positionParams.margin[0]) / (colWidth + positionParams.margin[0]));\r\n    let y = Math.round((top - positionParams.margin[1]) / (positionParams.rowHeight + positionParams.margin[1]));\r\n\r\n    // Capping\r\n    x = clamp(x, 0, positionParams.cols - w);\r\n    y = clamp(y, 0, positionParams.maxRows - h);\r\n    return { x, y };\r\n}\r\n\r\n/**\r\n * Given a height and width in pixel values, calculate grid units.\r\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calcluations.\r\n * @param  {Number} height                  Height in pixels.\r\n * @param  {Number} width                   Width in pixels.\r\n * @param  {Number} x                       X coordinate in grid units.\r\n * @param  {Number} y                       Y coordinate in grid units.\r\n * @return {Object}                         w, h as grid units.\r\n */\r\nexport function calcWH(\r\n    positionParams: PositionParams,\r\n    width: number,\r\n    height: number,\r\n    x: number,\r\n    y: number\r\n): { w: number; h: number } {\r\n    const { margin, maxRows, cols, rowHeight } = positionParams;\r\n    const colWidth = calcGridColWidth(positionParams);\r\n\r\n    // width = colWidth * w - (margin * (w - 1))\r\n    // ...\r\n    // w = (width + margin) / (colWidth + margin)\r\n    let w = Math.round((width + margin[0]) / (colWidth + margin[0]));\r\n    let h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\r\n\r\n    // Capping\r\n    w = clamp(w, 0, cols - x);\r\n    h = clamp(h, 0, maxRows - y);\r\n    return { w, h };\r\n}\r\n\r\n// Similar to _.clamp\r\nexport function clamp(num: number, lowerBound: number, upperBound: number) {\r\n    return Math.max(Math.min(num, upperBound), lowerBound);\r\n}\r\n","<template>\r\n    <VueDraggableCore\r\n        v-bind=\"draggableProps\"\r\n        :handle=\"handle\"\r\n        :cancel=\"`.vue-resizable-handle${cancel ? ',' + cancel : ''}`\"\r\n        :disabled=\"!isDraggable\"\r\n        :offset-parent=\"offsetParent\"\r\n        @dragStart=\"dragStart\"\r\n        @drag=\"drag\"\r\n        @dragStop=\"dragStop\"\r\n    >\r\n        <template slot-scope=\"draggableCoreProps\">\r\n            <VueResizableCore\r\n                v-bind=\"resizableProps\"\r\n                :draggable-props=\"{\r\n                    ...(resizableProps.draggableProps && resizableProps.draggableProps),\r\n                    disabled: !isResizable\r\n                }\"\r\n                :width=\"newPos.width\"\r\n                :height=\"newPos.height\"\r\n                :min-constraints=\"minConstraints\"\r\n                :max-constraints=\"maxConstraints\"\r\n                :transform-scale=\"transformScale\"\r\n                :resize-handles=\"resizeHandles\"\r\n                :offset-parent=\"offsetParent\"\r\n                :class=\"isResizable ? '' : 'vue-resizable-hide'\"\r\n                @resizeStart=\"resizeStart\"\r\n                @resize=\"resize\"\r\n                @resizeStop=\"resizeStop\"\r\n            >\r\n                <template slot-scope=\"resizableCoreProps\">\r\n                    <component\r\n                        :is=\"tag\"\r\n                        :class=\"classes\"\r\n                        :style=\"styles\"\r\n                        @mousedown=\"draggableCoreProps.mouseDown\"\r\n                        @mouseup=\"draggableCoreProps.mouseUp\"\r\n                        @touchend=\"draggableCoreProps.touchEnd\"\r\n                    >\r\n                        <slot />\r\n                        <component\r\n                            :is=\"resizeHandle.wrapper\"\r\n                            v-for=\"resizeHandle in resizableCoreProps.resizeHandles\"\r\n                            :key=\"resizeHandle.axis\"\r\n                            v-bind=\"resizeHandle.props\"\r\n                            v-on=\"resizeHandle.on\"\r\n                        >\r\n                            <span :class=\"resizeHandle.class\"></span>\r\n                        </component>\r\n                    </component>\r\n                </template>\r\n            </VueResizableCore>\r\n        </template>\r\n    </VueDraggableCore>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue, { PropType } from 'vue';\r\nimport isEqual from 'lodash.isEqual';\r\nimport { DroppingPosition, perc, VueDraggableCallbackData, setTopLeft, setTransform, Position } from './lib/utils';\r\nimport {\r\n    calcGridColWidth,\r\n    calcGridItemPosition,\r\n    calcGridItemWHPx,\r\n    calcWH,\r\n    calcXY,\r\n    clamp,\r\n    PositionParams\r\n} from './lib/calculateUtils';\r\nimport { VueDraggableCore } from 'vue-draggable-core';\r\nimport { VueResizableCore } from 'vue-resizable-core';\r\n\r\ntype PartialPosition = { top: number; left: number };\r\n\r\n/**\r\n * An individual item within a VueGridLayout.\r\n */\r\nexport default Vue.extend({\r\n    name: 'VueGridItem',\r\n    components: {\r\n        VueDraggableCore,\r\n        VueResizableCore\r\n    },\r\n    props: {\r\n        cancel: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        handle: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        i: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        x: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        y: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        w: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        h: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        minW: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        maxW: {\r\n            type: Number,\r\n            default: Infinity\r\n        },\r\n        minH: {\r\n            type: Number,\r\n            validator(value: number): boolean {\r\n                return value >= 1;\r\n            },\r\n            default: 1\r\n        },\r\n        maxH: {\r\n            type: Number,\r\n            default: Infinity\r\n        },\r\n        resizeHandles: {\r\n            type: Array as PropType<Array<'s' | 'w' | 'e' | 'n' | 'sw' | 'nw' | 'se' | 'ne'>>,\r\n            default: () => ['sw']\r\n        },\r\n        cols: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        containerWidth: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        margin: {\r\n            type: [Array, Object] as PropType<[number, number]>,\r\n            required: true\r\n        },\r\n        containerPadding: {\r\n            type: [Array, Object] as PropType<[number, number]>,\r\n            required: true\r\n        },\r\n        rowHeight: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        maxRows: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        isDraggable: {\r\n            type: Boolean\r\n        },\r\n        isResizable: {\r\n            type: Boolean\r\n        },\r\n        isBounded: {\r\n            type: Boolean\r\n        },\r\n        static: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        useCSSTransforms: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        usePercentages: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        transformScale: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        droppingPosition: {\r\n            type: Object as PropType<DroppingPosition>,\r\n            default: null\r\n        },\r\n        draggableProps: {\r\n            type: Object,\r\n            default: () => ({})\r\n        },\r\n        resizableProps: {\r\n            type: Object,\r\n            default: () => ({})\r\n        },\r\n        tag: {\r\n            type: [Object, Function, String],\r\n            default: 'div'\r\n        },\r\n        offsetParent: {\r\n            type: Object as PropType<HTMLElement>,\r\n            validator(value: any): boolean {\r\n                return value && value.nodeType == 1;\r\n            },\r\n            default: null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            resizing: null,\r\n            dragging: null,\r\n            currentNode: null\r\n        };\r\n    },\r\n    computed: {\r\n        classes() {\r\n            return {\r\n                'vue-grid-item': true,\r\n                static: this.static,\r\n                resizing: Boolean(this.resizing),\r\n                'vue-draggable': this.isDraggable,\r\n                'vue-draggable-dragging': Boolean(this.dragging),\r\n                dropping: Boolean(this.droppingPosition),\r\n                cssTransforms: this.useCSSTransforms\r\n            };\r\n        },\r\n        styles() {\r\n            return this.createStyle(this.pos());\r\n        },\r\n        newPos() {\r\n            return this.pos();\r\n        },\r\n        getPositionParams(): PositionParams {\r\n            return {\r\n                cols: this.cols,\r\n                containerPadding: this.containerPadding,\r\n                containerWidth: this.containerWidth,\r\n                margin: this.margin,\r\n                maxRows: this.maxRows,\r\n                rowHeight: this.rowHeight\r\n            };\r\n        },\r\n        maxWidth(): number | null {\r\n            return this.isResizable\r\n                ? calcGridItemPosition(this.getPositionParams, 0, 0, this.cols - this.x, 0).width\r\n                : null;\r\n        },\r\n        minConstraints(): [number, number] | null {\r\n            if (this.isResizable) {\r\n                const mins = calcGridItemPosition(this.getPositionParams, 0, 0, this.minW, this.minH);\r\n                return [mins.width, mins.height];\r\n            }\r\n            return null;\r\n        },\r\n        maxConstraints(): [number, number] | null {\r\n            if (this.isResizable) {\r\n                const maxes = calcGridItemPosition(this.getPositionParams, 0, 0, this.maxW, this.maxH);\r\n                return [Math.min(maxes.width, this.maxWidth), Math.min(maxes.height, Infinity)];\r\n            }\r\n            return null;\r\n        },\r\n        posWidth() {\r\n            const pos = this.pos;\r\n            return pos ? pos.width : 0;\r\n        },\r\n        posHeight() {\r\n            const pos = this.pos;\r\n            return pos ? pos.height : 0;\r\n        }\r\n    },\r\n    watch: {\r\n        'droppingPosition.left'(newVal: DroppingPosition, oldVal: DroppingPosition) {\r\n            if (!isEqual(newVal, oldVal)) {\r\n                this.moveDroppingItem(oldVal);\r\n            }\r\n        },\r\n        'droppingPosition.top'(newVal: DroppingPosition, oldVal: DroppingPosition) {\r\n            if (!isEqual(newVal, oldVal)) {\r\n                this.moveDroppingItem(oldVal);\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.moveDroppingItem({});\r\n    },\r\n    methods: {\r\n        pos() {\r\n            return calcGridItemPosition(this.getPositionParams, this.x, this.y, this.w, this.h, this);\r\n        },\r\n        // // When a droppingPosition is present, this means we should fire a move event, as if we had moved\r\n        // // this element by `x, y` pixels.\r\n        moveDroppingItem(oldVal?: Partial<DroppingPosition>): void {\r\n            if (!this.droppingPosition) return;\r\n\r\n            const prevDroppingPosition = (oldVal && oldVal) || {\r\n                left: 0,\r\n                top: 0\r\n            };\r\n\r\n            const shouldDrag =\r\n                (this.dragging && this.droppingPosition.left !== prevDroppingPosition.left) ||\r\n                this.droppingPosition.top !== prevDroppingPosition.top;\r\n\r\n            if (!this.dragging) {\r\n                this.$emit(\r\n                    'dragStart',\r\n                    {\r\n                        node: this.$el as HTMLElement,\r\n                        deltaX: this.droppingPosition.left,\r\n                        deltaY: this.droppingPosition.top\r\n                    },\r\n                    this.droppingPosition.e\r\n                );\r\n            } else if (shouldDrag) {\r\n                const deltaX = this.droppingPosition.left - ((this.dragging as unknown) as PartialPosition).left;\r\n                const deltaY = this.droppingPosition.top - ((this.dragging as unknown) as PartialPosition).top;\r\n\r\n                this.$emit(\r\n                    'drag',\r\n                    {\r\n                        node: this.$el as HTMLElement,\r\n                        deltaX,\r\n                        deltaY\r\n                    },\r\n                    this.droppingPosition.e\r\n                );\r\n            }\r\n        },\r\n        /**\r\n         * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\r\n         * well when server rendering, and the only way to do that properly is to use percentage width/left because\r\n         * we don't know exactly what the browser viewport is.\r\n         * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\r\n         * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\r\n         *\r\n         * @param  {Object} pos Position object with width, height, left, top.\r\n         * @return {Object}     Style object.\r\n         */\r\n        createStyle(pos: Position): { [key: string]: string } {\r\n            // const { usePercentages, containerWidth, useCSSTransforms } = this;\r\n\r\n            let style;\r\n            // CSS Transforms support (default)\r\n            if (this.useCSSTransforms) {\r\n                style = setTransform(pos);\r\n            } else {\r\n                // top,left (slow)\r\n                style = setTopLeft(pos);\r\n\r\n                // This is used for server rendering.\r\n                if (this.usePercentages) {\r\n                    (style as any).left = perc(pos.left / this.containerWidth);\r\n                    (style as any).width = perc(pos.width / this.containerWidth);\r\n                }\r\n            }\r\n\r\n            return style as any;\r\n        },\r\n        /**\r\n         * onDragStart event handler\r\n         * @param  {Object} callbackData  an object with node, delta and position information\r\n         * @param  {Event}  e             event data\r\n         */\r\n        dragStart({ node }: VueDraggableCallbackData, e: Event): any {\r\n            const newPosition: PartialPosition = { top: 0, left: 0 };\r\n\r\n            // TODO: this wont work on nested parents\r\n            const offsetParent = this.offsetParent || node.offsetParent;\r\n            if (!offsetParent) return;\r\n            const parentRect = offsetParent.getBoundingClientRect();\r\n            const clientRect = node.getBoundingClientRect();\r\n            const cLeft = clientRect.left / this.transformScale;\r\n            const pLeft = parentRect.left / this.transformScale;\r\n            const cTop = clientRect.top / this.transformScale;\r\n            const pTop = parentRect.top / this.transformScale;\r\n            newPosition.left = cLeft - pLeft + offsetParent.scrollLeft;\r\n            newPosition.top = cTop - pTop + offsetParent.scrollTop;\r\n            this.dragging = { ...newPosition };\r\n\r\n            // Call callback with this data\r\n            const { x, y } = calcXY(this.getPositionParams, newPosition.top, newPosition.left, this.w, this.h);\r\n\r\n            this.$emit('dragStart', this.i, x, y, { e, node, newPosition });\r\n            // return onDragStart.call(this, i, x, y, { e, node, newPosition });\r\n        },\r\n        /**\r\n         * onDrag event handler\r\n         * @param  {Object} callbackData  an object with node, delta and position information\r\n         * @param  {Event}  e             event data\r\n         */\r\n        drag({ node, deltaX, deltaY }: VueDraggableCallbackData, e: Event): any {\r\n            deltaX /= this.transformScale;\r\n            deltaY /= this.transformScale;\r\n\r\n            if (!this.dragging) {\r\n                throw new Error('onDrag called before onDragStart.');\r\n            }\r\n            let top = this.dragging.top + deltaY;\r\n            let left = this.dragging.left + deltaX;\r\n\r\n            const positionParams = this.getPositionParams;\r\n\r\n            // Boundary calculations; keeps items within the grid\r\n            if (this.isBounded) {\r\n                const { offsetParent } = node;\r\n\r\n                if (offsetParent) {\r\n                    const { margin, rowHeight } = this;\r\n                    const bottomBoundary = offsetParent.clientHeight - calcGridItemWHPx(this.h, rowHeight, margin[1]);\r\n                    top = clamp(top, 0, bottomBoundary);\r\n\r\n                    const colWidth = calcGridColWidth(positionParams);\r\n                    const rightBoundary = this.containerWidth - calcGridItemWHPx(this.w, colWidth, margin[0]);\r\n                    left = clamp(left, 0, rightBoundary);\r\n                }\r\n            }\r\n\r\n            const newPosition: PartialPosition = { top, left };\r\n            this.dragging = { ...newPosition };\r\n            // this.$set(this.dragging, top, newPosition.top);\r\n            // this.$set(this.dragging, left, newPosition.left);\r\n\r\n            // Call callback with this data\r\n            const { x, y } = calcXY(positionParams, top, left, this.w, this.h);\r\n            this.$emit('drag', this.i, x, y, { e, node, newPosition });\r\n            // return onDrag.call(this, i, x, y, { e, node, newPosition });\r\n        },\r\n        /**\r\n         * onDragStop event handler\r\n         * @param  {Object} callbackData  an object with node, delta and position information\r\n         * @param  {Event}  e             event data\r\n         */\r\n        dragStop({ node }: VueDraggableCallbackData, e: Event): any {\r\n            if (!this.dragging) {\r\n                throw new Error('onDragEnd called before onDragStart.');\r\n            }\r\n            const { left, top } = this.dragging;\r\n            const newPosition: PartialPosition = { top, left };\r\n            this.dragging = null;\r\n\r\n            const { x, y } = calcXY(this.getPositionParams, top, left, this.w, this.h);\r\n            this.$emit('dragStop', this.i, x, y, { e, node, newPosition });\r\n            // return onDragStop.call(this, i, x, y, { e, node, newPosition });\r\n        },\r\n        /**\r\n         * onResizeStop event handler\r\n         * @param  {Object} callbackData  an object with node and size information\r\n         * @param  {Event}  e             event data\r\n         */\r\n        resizeStop(callbackData: { node: HTMLElement; size: Position }, e: Event) {\r\n            this.onResizeHandler(callbackData, e, 'resizeStop');\r\n        },\r\n        /**\r\n         * onResizeStart event handler\r\n         * @param  {Object} callbackData  an object with node and size information\r\n         * @param  {Event}  e             event data\r\n         */\r\n        resizeStart(callbackData: { node: HTMLElement; size: Position }, e: Event) {\r\n            this.onResizeHandler(callbackData, e, 'resizeStart');\r\n        },\r\n        /**\r\n         * onResize event handler\r\n         * @param  {Object} callbackData  an object with node and size information\r\n         * @param  {Event}  e             event data\r\n         */\r\n        resize(callbackData: { node: HTMLElement; size: Position }, e: Event) {\r\n            this.onResizeHandler(callbackData, e, 'resize');\r\n        },\r\n        /**\r\n         * Wrapper around drag events to provide more useful data.\r\n         * All drag events call the function with the given handler name,\r\n         * with the signature (index, x, y).\r\n         *\r\n         * @param node\r\n         * @param size\r\n         * @param e\r\n         * @param  {String} handlerName Handler name to wrap.\r\n         * @return {Function}           Handler function.\r\n         */\r\n        onResizeHandler({ node, size }: { node: HTMLElement; size: Position }, e: Event, handlerName: string) {\r\n            // const { cols, x, y, i, maxH, minH } = this;\r\n            let { minW, maxW } = this;\r\n\r\n            // Get new XY\r\n            let { w, h } = calcWH(this.getPositionParams, size.width, size.height, this.x, this.y);\r\n\r\n            // minW should be at least 1\r\n            minW = Math.max(minW, 1);\r\n\r\n            // maxW should be at most (cols - x)\r\n            maxW = Math.min(maxW, this.cols - this.x);\r\n\r\n            // Min/max capping\r\n            w = clamp(w, minW, maxW);\r\n            h = clamp(h, this.minH, this.maxH);\r\n\r\n            this.resizing = handlerName === 'resizeStop' ? null : { ...size };\r\n            this.$emit(handlerName, this.i, w, h, { e, node, size });\r\n            // handler.call(this, i, w, h, { e, node, size });\r\n        }\r\n    }\r\n});\r\n</script>\r\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","import Vue, { PropType } from 'vue';\r\nimport { CompactType, EventCallback, Layout, LayoutItem, noop } from './lib/utils';\r\n\r\nexport default Vue.extend({\r\n    props: {\r\n        width: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        autoSize: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        cols: {\r\n            type: Number,\r\n            default: 12\r\n        },\r\n        draggableCancel: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        draggableHandle: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        compactType: {\r\n            type: String as PropType<CompactType>,\r\n            default: CompactType.vertical\r\n        },\r\n        layout: {\r\n            type: Array as PropType<Layout>,\r\n            default: () => []\r\n        },\r\n        margin: {\r\n            type: [Object, Array] as PropType<[number, number]>,\r\n            default: () => [10, 10]\r\n        },\r\n        containerPadding: {\r\n            type: [Object, Array, null] as PropType<[number, number] | null>,\r\n            default: null\r\n        },\r\n        rowHeight: {\r\n            type: Number,\r\n            default: 150\r\n        },\r\n        maxRows: {\r\n            type: Number,\r\n            default: Infinity\r\n        },\r\n        isBounded: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isDraggable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        isResizable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        isDroppable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        preventCollision: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        useCSSTransforms: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        transformScale: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        droppingItem: {\r\n            type: Object as PropType<Partial<LayoutItem>>,\r\n            default: () => ({\r\n                i: '__dropping-elem__',\r\n                h: 1,\r\n                w: 1\r\n            })\r\n        },\r\n        resizeHandles: {\r\n            type: Array as PropType<Array<'s' | 'w' | 'e' | 'n' | 'sw' | 'nw' | 'se' | 'ne'>>,\r\n            default: () => ['se']\r\n        }\r\n    }\r\n});\r\n","<template>\r\n    <div\r\n        :class=\"classes\"\r\n        :style=\"styles\"\r\n        @drop=\"isDroppable ? onDrop : noop\"\r\n        @dragLeave=\"isDroppable ? onDragLeave : noop\"\r\n        @dragEnter=\"isDroppable ? onDragEnter : noop\"\r\n        @dragOver=\"isDroppable ? onDragOver : noop\"\r\n    >\r\n        <VueGridItem\r\n            v-for=\"l in currentLayout\"\r\n            :key=\"l.i\"\r\n            :container-width=\"width\"\r\n            :cols=\"cols\"\r\n            :margin=\"margin\"\r\n            :container-padding=\"containerPadding || margin\"\r\n            :max-rows=\"maxRows\"\r\n            :row-height=\"rowHeight\"\r\n            :cancel=\"draggableCancel\"\r\n            :handle=\"draggableHandle\"\r\n            :is-draggable=\"isItemDraggable(l)\"\r\n            :is-resizable=\"isItemResizable(l)\"\r\n            :is-bounded=\"isItemBounded(l)\"\r\n            :use-c-s-s-transforms=\"useCSSTransforms && mounted\"\r\n            :use-percentages=\"!mounted\"\r\n            :transform-scale=\"transformScale\"\r\n            :w=\"l.w\"\r\n            :h=\"l.h\"\r\n            :x=\"l.x\"\r\n            :y=\"l.y\"\r\n            :i=\"l.i\"\r\n            :min-h=\"l.minH\"\r\n            :min-w=\"l.minW\"\r\n            :max-w=\"l.maxW\"\r\n            :max-h=\"l.maxH\"\r\n            :static=\"l.static\"\r\n            :dropping-position=\"isDroppingItem ? droppingPosition : undefined\"\r\n            :resize-handles=\"l.resizeHandles || resizeHandles\"\r\n            :offset-parent=\"$el\"\r\n            @dragStart=\"onDragStart\"\r\n            @dragStop=\"onDragStop\"\r\n            @drag=\"onDrag\"\r\n            @resizeStart=\"onResizeStart\"\r\n            @resizeStop=\"onResizeStop\"\r\n            @resize=\"onResize\"\r\n        >\r\n            <slot name=\"item\" :w=\"l.w\" :h=\"l.h\" :x=\"l.x\" :y=\"l.y\" :i=\"l.i\"></slot>\r\n        </VueGridItem>\r\n        <VueGridItem\r\n            v-show=\"activeDrag\"\r\n            class=\"vue-grid-placeholder\"\r\n            :cols=\"cols\"\r\n            :margin=\"margin\"\r\n            :transform-scale=\"transformScale\"\r\n            :use-c-s-s-transforms=\"useCSSTransforms\"\r\n            :is-bounded=\"false\"\r\n            :is-resizable=\"false\"\r\n            :is-draggable=\"false\"\r\n            :row-height=\"rowHeight\"\r\n            :container-width=\"width\"\r\n            :container-padding=\"containerPadding || margin\"\r\n            :max-rows=\"maxRows\"\r\n            :w=\"(activeDrag && activeDrag.w) || 0\"\r\n            :h=\"(activeDrag && activeDrag.h) || 0\"\r\n            :x=\"(activeDrag && activeDrag.x) || 0\"\r\n            :y=\"(activeDrag && activeDrag.y) || 0\"\r\n            :i=\"(activeDrag && activeDrag.i) || 'placeholder'\"\r\n        >\r\n            <div />\r\n        </VueGridItem>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport VueGridLayoutProps from './VueGridLayoutProps';\r\nimport isEqual from 'lodash.isEqual';\r\nimport {\r\n    bottom,\r\n    cloneLayoutItem,\r\n    compact,\r\n    DragOverEvent,\r\n    getAllCollisions,\r\n    getLayoutItem,\r\n    GridDragEvent,\r\n    GridResizeEvent,\r\n    Layout,\r\n    LayoutItem,\r\n    moveElement,\r\n    noop,\r\n    synchronizeLayoutWithChildren\r\n} from './lib/utils';\r\nimport { PropType } from 'vue';\r\nimport VueGridItem from './VueGridItem.vue';\r\nimport { calcXY, PositionParams } from './lib/calculateUtils';\r\n\r\nconst layoutClass = 'vue-grid-layout';\r\n\r\nlet isFirefox = false;\r\n// Try...catch will protect from navigator not existing (e.g. node) or a bad implementation of navigator\r\ntry {\r\n    isFirefox = /firefox/i.test(navigator.userAgent);\r\n} catch (e) {\r\n    /* Ignore */\r\n}\r\n\r\nlet dragEnterCounter = 0;\r\n\r\nexport default VueGridLayoutProps.extend({\r\n    name: 'VueGridLayout',\r\n    components: { VueGridItem },\r\n    props: {\r\n        layout: {\r\n            type: Array as PropType<Layout>,\r\n            default: () => []\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            activeDrag: null,\r\n            currentLayout: [],\r\n            mounted: false,\r\n            oldDragItem: null,\r\n            oldLayout: null,\r\n            oldResizeItem: null,\r\n            droppingDOMNode: null,\r\n            noop: noop\r\n        };\r\n    },\r\n    computed: {\r\n        classes() {\r\n            return layoutClass;\r\n        },\r\n        styles() {\r\n            return {\r\n                height: this.containerHeight()\r\n            };\r\n        }\r\n    },\r\n    created() {\r\n        this.currentLayout = this.layout;\r\n    },\r\n    mounted() {\r\n        this.mounted = true;\r\n        this.currentLayout = synchronizeLayoutWithChildren(this.layout, this.$children, this.cols, this.compactType);\r\n        this.onLayoutMaybeChanged(this.currentLayout, this.layout);\r\n    },\r\n    watch: {\r\n        layout: {\r\n            handler(newLayout: Layout) {\r\n                this.onLayoutMaybeChanged(newLayout, this.currentLayout);\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    methods: {\r\n        isItemDraggable(l: LayoutItem) {\r\n            return typeof l.isDraggable === 'boolean' ? l.isDraggable : !l.static && this.isDraggable;\r\n        },\r\n        isItemResizable(l: LayoutItem) {\r\n            return typeof l.isResizable === 'boolean' ? l.isResizable : !l.static && this.isResizable;\r\n        },\r\n        isItemBounded(l: LayoutItem) {\r\n            return this.isItemDraggable(l) && this.isBounded && l.isBounded !== false;\r\n        },\r\n        containerHeight() {\r\n            if (!this.autoSize) return;\r\n            const nbRow = bottom(this.currentLayout);\r\n            const containerPaddingY = this.containerPadding ? this.containerPadding[1] : this.margin[1];\r\n            return nbRow * this.rowHeight + (nbRow - 1) * this.margin[1] + containerPaddingY * 2 + 'px';\r\n        },\r\n        /**\r\n         * When dragging starts\r\n         * @param {String} i Id of the child\r\n         * @param {Number} x X position of the move\r\n         * @param {Number} y Y position of the move\r\n         * @param {Event} e The mousedown event\r\n         * @param {Element} node The current dragging DOM element\r\n         */\r\n        onDragStart(i: string, x: number, y: number, { e, node }: GridDragEvent) {\r\n            const { currentLayout } = this;\r\n            const l = getLayoutItem(currentLayout, i);\r\n            if (!l) return;\r\n\r\n            this.oldDragItem = cloneLayoutItem(l);\r\n            this.oldLayout = this.currentLayout;\r\n\r\n            this.$emit('dragStart', currentLayout, l, l, null, e, node);\r\n        },\r\n        /**\r\n         * Each drag movement create a new dragelement and move the element to the dragged location\r\n         * @param {String} i Id of the child\r\n         * @param {Number} x X position of the move\r\n         * @param {Number} y Y position of the move\r\n         * @param {Event} e The mousedown event\r\n         * @param {Element} node The current dragging DOM element\r\n         */\r\n        onDrag(i: string, x: number, y: number, { e, node }: GridDragEvent) {\r\n            const { oldDragItem, cols, compactType, preventCollision } = this;\r\n            let { currentLayout } = this;\r\n            const l = getLayoutItem(currentLayout, i);\r\n            if (!l) return;\r\n\r\n            // Create placeholder (display only)\r\n            const placeholder = {\r\n                w: l.w,\r\n                h: l.h,\r\n                x: l.x,\r\n                y: l.y,\r\n                placeholder: true,\r\n                i: i\r\n            };\r\n\r\n            // Move the element to the dragged location.\r\n            const isUserAction = true;\r\n            currentLayout = moveElement(currentLayout, l, x, y, isUserAction, preventCollision, compactType, cols);\r\n\r\n            this.$emit('drag', currentLayout, oldDragItem, l, placeholder, e, node);\r\n\r\n            this.currentLayout = compact(currentLayout, compactType, cols);\r\n            this.activeDrag = placeholder;\r\n        },\r\n        /**\r\n         * When dragging stops, figure out which position the element is closest to and update its x and y.\r\n         * @param  {String} i Index of the child.\r\n         * @param {Number} x X position of the move\r\n         * @param {Number} y Y position of the move\r\n         * @param {Event} e The mousedown event\r\n         * @param {Element} node The current dragging DOM element\r\n         */\r\n        onDragStop(i: string, x: number, y: number, { e, node }: GridDragEvent) {\r\n            if (!this.activeDrag) return;\r\n            const { oldDragItem, cols, preventCollision, compactType } = this;\r\n            let { currentLayout } = this;\r\n            const l = getLayoutItem(currentLayout, i);\r\n            if (!l) return;\r\n\r\n            // Move the element here\r\n            const isUserAction = true;\r\n            currentLayout = moveElement(currentLayout, l, x, y, isUserAction, preventCollision, compactType, cols);\r\n\r\n            this.$emit('dragStop', currentLayout, oldDragItem, l, null, e, node);\r\n\r\n            // Set state\r\n            const newLayout = compact(currentLayout, compactType, cols);\r\n            const { oldLayout } = this;\r\n\r\n            this.activeDrag = null;\r\n            this.currentLayout = newLayout;\r\n            this.oldDragItem = null;\r\n            this.oldLayout = null;\r\n\r\n            this.onLayoutMaybeChanged(newLayout, oldLayout);\r\n        },\r\n        onLayoutMaybeChanged(newLayout: Layout, oldLayout?: Layout) {\r\n            if (!oldLayout) oldLayout = this.currentLayout;\r\n\r\n            if (!isEqual(oldLayout, newLayout)) {\r\n                this.currentLayout = newLayout;\r\n                this.$emit('layoutChange', newLayout);\r\n            }\r\n        },\r\n        onResizeStart(i: string, w: number, h: number, { e, node }: GridResizeEvent) {\r\n            const { currentLayout } = this;\r\n            let l = getLayoutItem(currentLayout, i);\r\n            if (!l) return;\r\n\r\n            this.oldResizeItem = cloneLayoutItem(l);\r\n            this.oldLayout = currentLayout;\r\n\r\n            this.$emit('resizeStart', currentLayout, l, l, null, e, node);\r\n        },\r\n        onResize(i: string, w: number, h: number, { e, node }: GridResizeEvent) {\r\n            const { currentLayout, oldResizeItem, cols, preventCollision, compactType } = this;\r\n            const l: LayoutItem | undefined = getLayoutItem(currentLayout, i);\r\n            if (!l) return;\r\n\r\n            // Something like quad tree should be used\r\n            // to find collisions faster\r\n            let hasCollisions;\r\n            if (preventCollision) {\r\n                const collisions = getAllCollisions(currentLayout, { ...l, w, h }).filter(\r\n                    layoutItem => layoutItem.i !== l.i\r\n                );\r\n                hasCollisions = collisions.length > 0;\r\n\r\n                // If we're colliding, we need adjust the placeholder.\r\n                if (hasCollisions) {\r\n                    // adjust w && h to maximum allowed space\r\n                    let leastX = Infinity,\r\n                        leastY = Infinity;\r\n                    collisions.forEach(layoutItem => {\r\n                        if (layoutItem.x > l.x) leastX = Math.min(leastX, layoutItem.x);\r\n                        if (layoutItem.y > l.y) leastY = Math.min(leastY, layoutItem.y);\r\n                    });\r\n\r\n                    if (Number.isFinite(leastX)) l.w = leastX - l.x;\r\n                    if (Number.isFinite(leastY)) l.h = leastY - l.y;\r\n                }\r\n            }\r\n\r\n            if (!hasCollisions) {\r\n                // Set new width and height.\r\n                l.w = w;\r\n                l.h = h;\r\n            }\r\n\r\n            // Create placeholder element (display only)\r\n            const placeholder = {\r\n                w: l.w,\r\n                h: l.h,\r\n                x: l.x,\r\n                y: l.y,\r\n                static: true,\r\n                i: i\r\n            };\r\n\r\n            this.$emit('resize', currentLayout, oldResizeItem, l, placeholder, e, node);\r\n\r\n            // Re-compact the layout and set the drag placeholder.\r\n            this.currentLayout = compact(currentLayout, compactType, cols);\r\n            this.activeDrag = placeholder;\r\n        },\r\n        onResizeStop(i: string, w: number, h: number, { e, node }: GridResizeEvent) {\r\n            const { currentLayout, oldResizeItem, compactType, cols } = this;\r\n            let l = getLayoutItem(currentLayout, i);\r\n\r\n            this.$emit('resizeStop', currentLayout, oldResizeItem, l, null, e, node);\r\n            // this.resizeStop(layout, oldResizeItem, l, null, e, node);\r\n\r\n            // Set state\r\n            const newLayout = compact(currentLayout, compactType, cols);\r\n            const { oldLayout } = this;\r\n\r\n            this.activeDrag = null;\r\n            this.currentLayout = newLayout;\r\n            // this.$set(this, 'layout', newLayout);\r\n            this.oldResizeItem = null;\r\n            this.oldLayout = null;\r\n\r\n            this.onLayoutMaybeChanged(newLayout, oldLayout);\r\n        },\r\n        // Called while dragging an element. Part of browser native drag/drop API.\r\n        // Native event target might be the layout itself, or an element within the layout.\r\n        onDragOver(e: DragOverEvent) {\r\n            // we should ignore events from layout's children in Firefox\r\n            // to avoid unpredictable jumping of a dropping placeholder\r\n            // FIXME remove this hack\r\n            if (isFirefox && e.nativeEvent.target.className.indexOf(layoutClass) === -1) {\r\n                return false;\r\n            }\r\n\r\n            const { droppingItem, margin, cols, rowHeight, maxRows, width, containerPadding } = this;\r\n            const { currentLayout } = this;\r\n            // This is relative to the DOM element that this event fired for.\r\n            const { layerX, layerY } = e.nativeEvent;\r\n            const droppingPosition = { left: layerX, top: layerY, e };\r\n\r\n            if (!this.droppingDOMNode) {\r\n                const positionParams: PositionParams = {\r\n                    cols,\r\n                    margin,\r\n                    maxRows,\r\n                    rowHeight,\r\n                    containerWidth: width,\r\n                    containerPadding: containerPadding || margin\r\n                };\r\n\r\n                const calculatedPosition = calcXY(positionParams, layerY, layerX, droppingItem.w, droppingItem.h);\r\n\r\n                this.droppingDOMNode = this.$createElement('div', { key: droppingItem.i });\r\n                this.droppingPosition = droppingPosition;\r\n                this.currentLayout = [\r\n                    ...currentLayout,\r\n                    {\r\n                        ...droppingItem,\r\n                        x: calculatedPosition.x,\r\n                        y: calculatedPosition.y,\r\n                        static: false,\r\n                        isDraggable: true\r\n                    }\r\n                ];\r\n            } else if (this.droppingPosition) {\r\n                const { left, top } = this.droppingPosition;\r\n                const shouldUpdatePosition = left != layerX || top != layerY;\r\n                if (shouldUpdatePosition) {\r\n                    this.droppingPosition = droppingPosition;\r\n                }\r\n            }\r\n\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        },\r\n        removeDroppingPlaceholder() {\r\n            const { droppingItem, cols } = this;\r\n            const { currentLayout } = this;\r\n\r\n            this.currentLayout = compact(\r\n                (currentLayout as Layout).filter(l => l.i !== droppingItem.i),\r\n                this.compactType,\r\n                cols\r\n            );\r\n            this.droppingDOMNode = null;\r\n            this.activeDrag = null;\r\n            this.droppingPosition = undefined;\r\n        },\r\n        onDragLeave() {\r\n            dragEnterCounter--;\r\n\r\n            // onDragLeave can be triggered on each layout's child.\r\n            // But we know that count of dragEnter and dragLeave events\r\n            // will be balanced after leaving the layout's container\r\n            // so we can increase and decrease count of dragEnter and\r\n            // when it'll be equal to 0 we'll remove the placeholder\r\n            if (dragEnterCounter === 0) {\r\n                this.removeDroppingPlaceholder();\r\n            }\r\n        },\r\n        onDragEnter() {\r\n            dragEnterCounter++;\r\n        },\r\n        onDrop(e: Event) {\r\n            const { droppingItem } = this;\r\n            const { currentLayout } = this;\r\n            const item = (currentLayout as Layout).find(l => l.i === droppingItem.i);\r\n\r\n            // reset gragEnter counter on drop\r\n            dragEnterCounter = 0;\r\n\r\n            this.removeDroppingPlaceholder();\r\n\r\n            this.$emit('drop', currentLayout, item, e);\r\n        }\r\n    }\r\n});\r\n</script>\r\n","import { cloneLayout, compact, correctBounds } from './utils';\r\n\r\nimport { CompactType, Layout } from './utils';\r\n\r\nexport type Breakpoint = string;\r\nexport type DefaultBreakpoints = 'lg' | 'md' | 'sm' | 'xs' | 'xxs';\r\n\r\nexport type ResponsiveLayout = {\r\n    [breakpoint: string]: Layout;\r\n};\r\nexport type Breakpoints = {\r\n    [breakpoint: string]: number;\r\n};\r\n\r\n/**\r\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\r\n *\r\n * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\r\n * @param  {Number} width Screen width.\r\n * @return {String}       Highest breakpoint that is less than width.\r\n */\r\nexport function getBreakpointFromWidth(breakpoints: Breakpoints, width: number): Breakpoint {\r\n    const sorted = sortBreakpoints(breakpoints);\r\n    let matching = sorted[0];\r\n    for (let i = 1, len = sorted.length; i < len; i++) {\r\n        const breakpointName = sorted[i];\r\n        if (width > breakpoints[breakpointName]) matching = breakpointName;\r\n    }\r\n    return matching;\r\n}\r\n\r\n/**\r\n * Given a breakpoint, get the # of cols set for it.\r\n * @param  {String} breakpoint Breakpoint name.\r\n * @param  {Object} cols       Map of breakpoints to cols.\r\n * @return {Number}            Number of cols.\r\n */\r\nexport function getColsFromBreakpoint(breakpoint: Breakpoint, cols: Breakpoints): number {\r\n    if (!cols[breakpoint]) {\r\n        throw new Error('ResponsiveVueGridLayout: `cols` entry for breakpoint ' + breakpoint + ' is missing!');\r\n    }\r\n    return cols[breakpoint];\r\n}\r\n\r\n/**\r\n * Given existing layouts and a new breakpoint, find or generate a new layout.\r\n *\r\n * This finds the layout above the new one and generates from it, if it exists.\r\n *\r\n * @param  {Object} layouts     Existing layouts.\r\n * @param  {Array} breakpoints All breakpoints.\r\n * @param  {String} breakpoint New breakpoint.\r\n * @param  {String} lastBreakpoint\r\n * @param  {String} breakpoint Last breakpoint (for fallback).\r\n * @param  {Number} cols       Column count at new breakpoint.\r\n * @param  {CompactType} compactType\r\n *   vertically.\r\n * @return {Array}             New layout.\r\n */\r\nexport function findOrGenerateResponsiveLayout(\r\n    layouts: ResponsiveLayout,\r\n    breakpoints: Breakpoints,\r\n    breakpoint: Breakpoint,\r\n    lastBreakpoint: Breakpoint,\r\n    cols: number,\r\n    compactType: CompactType\r\n): Layout {\r\n    // If it already exists, just return it.\r\n    if (layouts[breakpoint]) return cloneLayout(layouts[breakpoint]);\r\n    // Find or generate the next layout\r\n    let layout = layouts[lastBreakpoint];\r\n    const breakpointsSorted = sortBreakpoints(breakpoints);\r\n    const breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\r\n    for (let i = 0, len = breakpointsAbove.length; i < len; i++) {\r\n        const b = breakpointsAbove[i];\r\n        if (layouts[b]) {\r\n            layout = layouts[b];\r\n            break;\r\n        }\r\n    }\r\n    layout = cloneLayout(layout || []); // clone layout so we don't modify existing items\r\n    return compact(correctBounds(layout, { cols: cols }), compactType, cols);\r\n}\r\n\r\n/**\r\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\r\n * e.g. ['xxs', 'xs', 'sm', ...]\r\n *\r\n * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\r\n * @return {Array}              Sorted breakpoints.\r\n */\r\nexport function sortBreakpoints(breakpoints: Breakpoints): Array<Breakpoint> {\r\n    const keys: Array<string> = Object.keys(breakpoints);\r\n    return keys.sort(function(a, b) {\r\n        return breakpoints[a] - breakpoints[b];\r\n    });\r\n}\r\n","<template>\r\n    <VueGridLayout\r\n        ref=\"layout\"\r\n        :margin=\"getIndentationValue(margin, currentBreakpoint)\"\r\n        :container-padding=\"getIndentationValue(containerPadding, currentBreakpoint)\"\r\n        :layout=\"currentLayout\"\r\n        :cols=\"currentCols\"\r\n        v-bind=\"$props\"\r\n        @layoutChange=\"onLayoutChange\"\r\n    >\r\n        <slot slot=\"item\" slot-scope=\"props\" name=\"item\" v-bind=\"props\"></slot>\r\n    </VueGridLayout>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { PropType } from 'vue';\r\nimport isEqual from 'lodash.isequal';\r\n\r\nimport { cloneLayout, synchronizeLayoutWithChildren, Layout } from './lib/utils';\r\nimport {\r\n    getBreakpointFromWidth,\r\n    getColsFromBreakpoint,\r\n    findOrGenerateResponsiveLayout,\r\n    ResponsiveLayout,\r\n    Breakpoints,\r\n    Breakpoint\r\n} from './lib/responsiveUtils';\r\nimport VueGridLayout from './VueGridLayout.vue';\r\nimport VueGridLayoutProps from './VueGridLayoutProps';\r\n\r\n/**\r\n * Get a value of margin or containerPadding.\r\n *\r\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\r\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\r\n * @return {Array}\r\n */\r\n\r\nexport default VueGridLayoutProps.extend({\r\n    name: 'VueResponsiveGridLayout',\r\n    components: { VueGridLayout },\r\n    props: {\r\n        breakpoint: {\r\n            type: String as PropType<Breakpoint>\r\n        },\r\n        breakpoints: {\r\n            type: Object as PropType<Breakpoints>,\r\n            default: () => ({ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 })\r\n        },\r\n        cols: {\r\n            type: [Array, Object] as PropType<{ [key: string]: number }>,\r\n            default: () => ({ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 })\r\n        },\r\n        layouts: {\r\n            type: Object as PropType<ResponsiveLayout>,\r\n            default: () => ({})\r\n        },\r\n        margin: {\r\n            type: [Object, Array] as PropType<{ [key: string]: [number, number] } | [number, number]>,\r\n            default: () => [10, 10]\r\n        },\r\n        containerPadding: {\r\n            type: [Object, Array] as PropType<{ [key: string]: [number, number] } | [number, number]>,\r\n            default: () => ({ lg: null, md: null, sm: null, xs: null, xxs: null })\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            currentLayout: [],\r\n            currentBreakpoint: '',\r\n            currentCols: 12,\r\n            currentLayouts: {}\r\n        };\r\n    },\r\n    watch: {\r\n        layouts: {\r\n            handler(newVal: ResponsiveLayout, oldVal: ResponsiveLayout) {\r\n                if (!isEqual(newVal, oldVal)) {\r\n                    this.currentLayout = findOrGenerateResponsiveLayout(\r\n                        newVal,\r\n                        this.breakpoints,\r\n                        this.currentBreakpoint,\r\n                        this.currentBreakpoint,\r\n                        this.currentCols,\r\n                        this.compactType\r\n                    );\r\n                    this.currentLayouts = newVal;\r\n                }\r\n            }\r\n        },\r\n        width(newVal, oldVal) {\r\n            if (newVal != oldVal) {\r\n                this.onWidthChange();\r\n            }\r\n        },\r\n        breakpoints: {\r\n            handler(newVal, oldVal) {\r\n                if (!isEqual(newVal, oldVal)) {\r\n                    this.onWidthChange();\r\n                }\r\n            },\r\n            deep: true\r\n        },\r\n        breakpoint(newVal, oldVal) {\r\n            if (newVal != oldVal) {\r\n                this.onWidthChange();\r\n            }\r\n        },\r\n        cols: {\r\n            handler(newVal, oldVal) {\r\n                if (!isEqual(newVal, oldVal)) {\r\n                    this.onWidthChange();\r\n                }\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    created() {\r\n        this.generateInitialState();\r\n    },\r\n    methods: {\r\n        generateInitialState() {\r\n            const breakpoint = getBreakpointFromWidth(this.breakpoints, this.width);\r\n            const colNo = getColsFromBreakpoint(breakpoint, this.cols);\r\n\r\n            // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\r\n            // for this layout.\r\n            this.currentLayout = findOrGenerateResponsiveLayout(\r\n                this.layouts,\r\n                this.breakpoints,\r\n                breakpoint,\r\n                breakpoint,\r\n                colNo,\r\n                this.compactType\r\n            );\r\n            this.currentBreakpoint = breakpoint;\r\n            this.currentCols = colNo;\r\n        },\r\n        // wrap layouts so we do not need to pass layouts to child\r\n        onLayoutChange(layout: Layout) {\r\n            this.$emit('layoutChange', layout, {\r\n                ...this.layouts,\r\n                [this.currentBreakpoint]: layout\r\n            });\r\n        },\r\n        /**\r\n         * When the width changes work through breakpoints and reset state with the new width & breakpoint.\r\n         * Width changes are necessary to figure out the widget widths.\r\n         */\r\n        onWidthChange() {\r\n            const newBreakpoint = this.breakpoint || getBreakpointFromWidth(this.breakpoints, this.width);\r\n\r\n            const lastBreakpoint = this.currentBreakpoint;\r\n            const newCols: number = getColsFromBreakpoint(newBreakpoint, this.cols);\r\n            const newLayouts = { ...this.layouts };\r\n\r\n            // Breakpoint change\r\n            if (lastBreakpoint !== newBreakpoint) {\r\n                // Preserve the current layout if the current breakpoint is not present in the next layouts.\r\n                if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = cloneLayout(this.currentLayout);\r\n\r\n                // Find or generate a new layout.\r\n                let layout = findOrGenerateResponsiveLayout(\r\n                    newLayouts,\r\n                    this.breakpoints,\r\n                    newBreakpoint,\r\n                    lastBreakpoint,\r\n                    newCols,\r\n                    this.compactType\r\n                );\r\n\r\n                // This adds missing items.\r\n                layout = synchronizeLayoutWithChildren(layout, this.$refs.layout.$children, newCols, this.compactType);\r\n\r\n                // Store the new layout.\r\n                newLayouts[newBreakpoint] = layout;\r\n\r\n                // events\r\n                this.$emit('layoutChange', layout, newLayouts);\r\n                this.$emit('onBreakpointChange', newBreakpoint, newCols);\r\n\r\n                this.currentBreakpoint = newBreakpoint;\r\n                this.currentLayout = layout;\r\n                this.currentCols = newCols;\r\n            }\r\n\r\n            const margin = this.getIndentationValue(this.margin, newBreakpoint);\r\n            const containerPadding = this.getIndentationValue(this.containerPadding, newBreakpoint);\r\n\r\n            //call onWidthChange on every change of width, not only on breakpoint changes\r\n            this.$emit('widthChange', this.width, margin, newCols, containerPadding);\r\n        },\r\n        getIndentationValue(param: { [key: string]: any } | any[], breakpoint: string): any {\r\n            if (param == null) return null;\r\n            return Array.isArray(param) ? param : param[breakpoint];\r\n        }\r\n    }\r\n});\r\n</script>\r\n","import Vue, { CreateElement, VNode } from 'vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'WidthProvider',\r\n    props: {\r\n        measureBeforeMount: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        width: {\r\n            type: Number,\r\n            required: false,\r\n            default: null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            currentWidth: 1280,\r\n            mounted: false\r\n        };\r\n    },\r\n    created() {\r\n        if (this.width) {\r\n            this.currentWidth = this.width;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.mounted = true;\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        this.onWindowResize();\r\n    },\r\n    beforeDestroy() {\r\n        this.mounted = false;\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    },\r\n    methods: {\r\n        onWindowResize() {\r\n            if (!this.mounted) {\r\n                return;\r\n            }\r\n            const node = this.$el;\r\n            if (node instanceof HTMLElement) {\r\n                this.currentWidth = node.offsetWidth;\r\n            }\r\n        }\r\n    },\r\n    render(h: CreateElement): VNode {\r\n        if (this.measureBeforeMount && !this.mounted) {\r\n            return h('div');\r\n        }\r\n        return this.$scopedSlots.default\r\n            ? this.$scopedSlots.default({\r\n                  width: this.currentWidth\r\n              })[0]\r\n            : h();\r\n    }\r\n});\r\n"],"names":["LARGE_ARRAY_SIZE","HASH_UNDEFINED","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","MAX_SAFE_INTEGER","argsTag","arrayTag","asyncTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reRegExpChar","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","binding","e","nodeIsTypedArray","isTypedArray","arrayFilter","array","predicate","index","length","resIndex","result","value","arrayPush","values","offset","arraySome","baseTimes","n","iteratee","Array","baseUnary","func","cacheHas","cache","key","has","getValue","object","undefined","mapToArray","map","size","forEach","overArg","transform","arg","setToArray","set","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","toString","hasOwnProperty","maskSrcKey","uid","exec","keys","IE_PROTO","nativeObjectToString","reIsNative","RegExp","call","replace","Buffer","Symbol","Uint8Array","propertyIsEnumerable","splice","symToStringTag","toStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","clear","entry","hashClear","__data__","hashDelete","hashGet","data","hashHas","hashSet","get","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","pop","listCacheGet","listCacheHas","listCacheSet","push","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArr","isArray","isArg","isArguments","isBuff","isType","skipIndexes","String","isIndex","eq","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsNative","isObject","isMasked","pattern","isFunction","test","baseIsTypedArray","isLength","baseKeys","isPrototype","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","tag","byteLength","byteOffset","buffer","name","message","convert","objProps","getAllKeys","objLength","othProps","skipCtor","objValue","objCtor","constructor","othCtor","getSymbols","isKeyable","isOwn","unmasked","stubArray","symbol","ArrayBuffer","resolve","Ctor","ctorString","type","proto","arguments","isArrayLike","stubFalse","isEqual","CompactType","isProduction","env","NODE_ENV","bottom","layout","max","bottomY","i","len","y","h","cloneLayout","newLayout","cloneLayoutItem","layoutItem","w","x","minW","maxW","minH","maxH","moved","Boolean","isDraggable","isResizable","resizeHandles","isBounded","collides","l1","l2","compact","compactType","cols","compareWith","getStatics","sorted","sortLayoutItems","out","l","compactItem","indexOf","heightWidth","resolveCompactionCollision","item","moveToCoord","axis","sizeProp","itemIndex","otherItem","fullLayout","compactV","compactH","Math","min","getFirstCollision","correctBounds","bounds","collidesWith","getLayoutItem","id","getAllCollisions","filter","moveElement","isUserAction","preventCollision","log","oldX","oldY","movingUp","reverse","collisions","collision","moveElementAwayFromCollision","itemToMove","fakeItem","perc","num","setTransform","top","left","width","height","translate","WebkitTransform","MozTransform","msTransform","OTransform","position","setTopLeft","sortLayoutItemsByColRow","sortLayoutItemsByRowCol","slice","sort","a","b","synchronizeLayoutWithChildren","initialLayout","children","child","$props","exists","g","$attrs","validateLayout","correctedLayout","contextName","subProps","Error","j","noop","calcGridColWidth","positionParams","containerWidth","margin","containerPadding","calcGridItemWHPx","gridUnits","colOrRowSize","marginPx","Number","isFinite","round","calcGridItemPosition","state","rowHeight","colWidth","resizing","dragging","calcXY","clamp","maxRows","calcWH","lowerBound","upperBound","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","originalRender","renderWithStyleInjection","existing","beforeCreate","concat","Vue","extend","props","required","autoSize","draggableCancel","draggableHandle","vertical","Infinity","isDroppable","useCSSTransforms","transformScale","droppingItem","getBreakpointFromWidth","breakpoints","sortBreakpoints","matching","breakpointName","getColsFromBreakpoint","breakpoint","findOrGenerateResponsiveLayout","layouts","lastBreakpoint","breakpointsSorted","breakpointsAbove","measureBeforeMount","currentWidth","mounted","created","window","addEventListener","onWindowResize","beforeDestroy","removeEventListener","methods","node","$el","HTMLElement","offsetWidth","$scopedSlots"],"mappings":"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"}