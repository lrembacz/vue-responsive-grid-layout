{"version":3,"file":"vue-draggable-core.common.js","sources":["../src/utils/shims.ts","../src/utils/domFns.ts","../src/utils/postitionFns.ts","../src/VueDraggableCore.ts"],"sourcesContent":["export function findInArray(array: Array<any> | TouchList, cb: Function): any {\r\n    for (let i = 0, length = array.length; i < length; i++) {\r\n        if (cb.apply(cb, [array[i], i, array])) return array[i];\r\n    }\r\n}\r\n\r\nexport function isFunction(func: any): boolean {\r\n    return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\r\n}\r\n\r\nexport function isNum(num: any): boolean {\r\n    return typeof num === 'number' && !isNaN(num);\r\n}\r\n","import { findInArray, isFunction } from './shims';\r\n\r\nimport { ControlPosition, PositionOffsetControlPosition, MouseTouchEvent } from './types';\r\n\r\nlet matchesSelectorFunc = '';\r\n\r\nexport function matchesSelector(el: Node, selector: string): boolean {\r\n    if (!matchesSelectorFunc) {\r\n        matchesSelectorFunc = findInArray(\r\n            ['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'],\r\n            function(method: any) {\r\n                return isFunction((el as any)[method]);\r\n            }\r\n        );\r\n    }\r\n\r\n    if (!isFunction((el as any)[matchesSelectorFunc])) return false;\r\n\r\n    return (el as any)[matchesSelectorFunc](selector);\r\n}\r\n\r\n// Works up the tree to the draggable itself attempting to match selector.\r\nexport function matchesSelectorAndParentsTo(el: Node, selector: string, baseNode: Node): boolean {\r\n    let node: Node | null = el;\r\n    do {\r\n        if (matchesSelector(node, selector)) return true;\r\n        if (node === baseNode) return false;\r\n        node = node.parentNode;\r\n    } while (node);\r\n\r\n    return false;\r\n}\r\n\r\nexport function addEvent(el: Node, event: string, handler: Function, inputOptions?: Object): void {\r\n    if (!el) return;\r\n    const options = { capture: true, ...inputOptions };\r\n    if (el.addEventListener) {\r\n        el.addEventListener(event, handler as EventListener, options);\r\n    } else if ((el as any).attachEvent) {\r\n        (el as any).attachEvent('on' + event, handler);\r\n    } else {\r\n        (el as any)['on' + event] = handler;\r\n    }\r\n}\r\n\r\nexport function removeEvent(el: Node, event: string, handler: Function, inputOptions?: Object): void {\r\n    if (!el) return;\r\n    const options = { capture: true, ...inputOptions };\r\n    if (el.removeEventListener) {\r\n        el.removeEventListener(event, handler as EventListener, options);\r\n    } else if ((el as any).detachEvent) {\r\n        (el as any).detachEvent('on' + event, handler);\r\n    } else {\r\n        (el as any)['on' + event] = null;\r\n    }\r\n}\r\n\r\n// Get from offsetParent\r\nexport function offsetXYFromParent(\r\n    evt: { clientX: number; clientY: number },\r\n    offsetParent: HTMLElement,\r\n    scale: number\r\n): ControlPosition {\r\n    const isBody = offsetParent === offsetParent.ownerDocument.body;\r\n    const offsetParentRect = isBody ? { left: 0, top: 0 } : offsetParent.getBoundingClientRect();\r\n\r\n    const x = (evt.clientX + offsetParent.scrollLeft - offsetParentRect.left) / scale;\r\n    const y = (evt.clientY + offsetParent.scrollTop - offsetParentRect.top) / scale;\r\n\r\n    return { x, y };\r\n}\r\n\r\nexport function getTouch(e: MouseTouchEvent, identifier: number): { clientX: number; clientY: number } {\r\n    return (\r\n        (e.targetTouches && findInArray(e.targetTouches, (t: any) => identifier === t.identifier)) ||\r\n        (e.changedTouches && findInArray(e.changedTouches, (t: any) => identifier === t.identifier))\r\n    );\r\n}\r\n\r\nexport function getTouchIdentifier(e: MouseTouchEvent): number | null {\r\n    if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\r\n    if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\r\n    return null;\r\n}\r\n\r\n// Note we're passing `document` b/c we could be iframed\r\nexport function addUserSelectStyles(doc: Document) {\r\n    if (!doc) return;\r\n    let styleEl = doc.getElementById('vue-draggable-style-el');\r\n    if (!styleEl) {\r\n        styleEl = doc.createElement('style');\r\n        (styleEl as HTMLStyleElement).type = 'text/css';\r\n        styleEl.id = 'vue-draggable-style-el';\r\n        styleEl.innerHTML = '.vue-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\r\n        styleEl.innerHTML += '.vue-draggable-transparent-selection *::selection {all: inherit;}\\n';\r\n        doc.getElementsByTagName('head')[0].appendChild(styleEl);\r\n    }\r\n    if (doc.body) addClassName(doc.body, 'vue-draggable-transparent-selection');\r\n}\r\n\r\nexport function removeUserSelectStyles(doc: Document) {\r\n    if (!doc) return;\r\n    try {\r\n        if (doc.body) removeClassName(doc.body, 'vue-draggable-transparent-selection');\r\n        const selection = doc.getSelection();\r\n        if (selection) {\r\n            selection.empty();\r\n        } else {\r\n            // Remove selection caused by scroll, unless it's a focused input\r\n            // (we use doc.defaultView in case we're in an iframe)\r\n            const selection = (doc.defaultView || window).getSelection();\r\n            if (selection && selection.type !== 'Caret') {\r\n                selection.removeAllRanges();\r\n            }\r\n        }\r\n    } catch (e) {\r\n        // probably IE\r\n    }\r\n}\r\n\r\nexport function addClassName(el: HTMLElement, className: string) {\r\n    if (el.classList) {\r\n        el.classList.add(className);\r\n    } else {\r\n        if (!el.className.match(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`))) {\r\n            el.className += ` ${className}`;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeClassName(el: HTMLElement, className: string) {\r\n    if (el.classList) {\r\n        el.classList.remove(className);\r\n    } else {\r\n        el.className = el.className.replace(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`, 'g'), '');\r\n    }\r\n}\r\n","import { isNum } from './shims';\r\nimport { getTouch, offsetXYFromParent } from './domFns';\r\n\r\nimport { Bounds, ControlPosition, DraggableData, MouseTouchEvent } from './types';\r\nimport DraggableCore from '../VueDraggableCore';\r\n\r\nexport function snapToGrid(grid: [number, number], pendingX: number, pendingY: number): [number, number] {\r\n    const x = Math.round(pendingX / grid[0]) * grid[0];\r\n    const y = Math.round(pendingY / grid[1]) * grid[1];\r\n    return [x, y];\r\n}\r\n\r\n// Get {x, y} positions from event.\r\nexport function getControlPosition(\r\n    e: MouseTouchEvent,\r\n    touchIdentifier: number | null,\r\n    draggableCore?: typeof DraggableCore\r\n): ControlPosition | null {\r\n    const touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\r\n    if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\r\n    const node = findDOMNode(draggableCore as any);\r\n    // User can provide an offsetParent if desired.\r\n    const offsetParent = (draggableCore as any).offsetParent || node.offsetParent || node.ownerDocument.body;\r\n    return offsetXYFromParent(touchObj || e, offsetParent, (draggableCore as any).scale);\r\n}\r\n\r\n// Create an data object exposed by <DraggableCore>'s events\r\nexport function createCoreData(draggable: typeof DraggableCore, x: number, y: number): DraggableData {\r\n    const state = draggable;\r\n    const isStart = !isNum((state as any).lastX);\r\n    const node = findDOMNode(draggable);\r\n\r\n    if (isStart) {\r\n        // If this is our first move, use the x and y as last coords.\r\n        return {\r\n            node,\r\n            deltaX: 0,\r\n            deltaY: 0,\r\n            lastX: x,\r\n            lastY: y,\r\n            x,\r\n            y\r\n        };\r\n    } else {\r\n        // Otherwise calculate proper values.\r\n        return {\r\n            node,\r\n            deltaX: x - (state as any).lastX,\r\n            deltaY: y - (state as any).lastY,\r\n            lastX: (state as any).lastX,\r\n            lastY: (state as any).lastY,\r\n            x,\r\n            y\r\n        };\r\n    }\r\n}\r\n\r\n// A lot faster than stringify/parse\r\nfunction cloneBounds(bounds: Bounds): Bounds {\r\n    return {\r\n        left: bounds.left,\r\n        top: bounds.top,\r\n        right: bounds.right,\r\n        bottom: bounds.bottom\r\n    };\r\n}\r\n\r\nfunction findDOMNode(draggable: typeof DraggableCore): HTMLElement {\r\n    const node = (draggable as any).findDOMNode();\r\n    if (!node) {\r\n        throw new Error('<DraggableCore>: Unmounted during event!');\r\n    }\r\n    return node;\r\n}\r\n","import Vue, { CreateElement, PropType, VNode } from 'vue';\r\nimport {\r\n    addEvent,\r\n    addUserSelectStyles,\r\n    getTouchIdentifier,\r\n    matchesSelectorAndParentsTo,\r\n    removeEvent,\r\n    removeUserSelectStyles\r\n} from './utils/domFns';\r\nimport { createCoreData, getControlPosition, snapToGrid } from './utils/postitionFns';\r\nimport log from './utils/log';\r\nimport { MouseTouchEvent } from './utils/types';\r\n\r\nconst eventsFor = {\r\n    touch: {\r\n        start: 'touchstart',\r\n        move: 'touchmove',\r\n        stop: 'touchend'\r\n    },\r\n    mouse: {\r\n        start: 'mousedown',\r\n        move: 'mousemove',\r\n        stop: 'mouseup'\r\n    }\r\n};\r\n\r\nlet dragEventFor = eventsFor.mouse;\r\n\r\nexport type DraggableData = {\r\n    node: HTMLElement;\r\n    x: number;\r\n    y: number;\r\n    deltaX: number;\r\n    deltaY: number;\r\n    lastX: number;\r\n    lastY: number;\r\n};\r\n\r\nexport type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;\r\n\r\nexport default Vue.extend({\r\n    name: 'VueDraggableCore',\r\n    props: {\r\n        allowAnyClick: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        enableUserSelectHack: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        offsetParent: {\r\n            validator(value: any): boolean {\r\n                return value && value.nodeType == 1;\r\n            },\r\n            default: null\r\n        },\r\n        grid: {\r\n            type: [Array, Object] as PropType<[number, number]>,\r\n            default: null\r\n        },\r\n        handle: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        cancel: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        scale: {\r\n            type: Number,\r\n            default: 1\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            mounted: false,\r\n            dragging: false,\r\n            lastX: NaN,\r\n            lastY: NaN,\r\n            touchIdentifier: null\r\n        };\r\n    },\r\n    mounted() {\r\n        this.mounted = true;\r\n        // Touch handlers must be added with {passive: false} to be cancelable.\r\n        // https://developers.google.com/web/updates/2017/01/scrolling-intervention\r\n        const thisNode = this.findDOMNode();\r\n\r\n        if (thisNode) {\r\n            // Add events if slot is default without scopes\r\n            if (this.$slots['default']) {\r\n                addEvent(thisNode, eventsFor.mouse.start, this.mouseDown);\r\n                addEvent(thisNode, eventsFor.mouse.stop, this.mouseUp);\r\n                addEvent(thisNode, eventsFor.touch.stop, this.touchEnd);\r\n            }\r\n            addEvent(thisNode, eventsFor.touch.start, this.touchStart, {\r\n                passive: false\r\n            });\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        this.mounted = false;\r\n        // Remove any leftover event handlers. Remove both touch and mouse handlers in case\r\n        // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\r\n        const thisNode = this.findDOMNode();\r\n        if (thisNode) {\r\n            // Remove events if slot is default without scopes\r\n            if (this.$slots['default']) {\r\n                removeEvent(thisNode, eventsFor.mouse.start, this.mouseDown);\r\n                removeEvent(thisNode, eventsFor.mouse.stop, this.mouseUp);\r\n                removeEvent(thisNode, eventsFor.touch.stop, this.touchEnd);\r\n            }\r\n\r\n            const { ownerDocument } = thisNode;\r\n            removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\r\n            removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\r\n            removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\r\n            removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\r\n\r\n            removeEvent(thisNode, eventsFor.touch.start, this.touchStart, {\r\n                passive: false\r\n            });\r\n            if (this.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\r\n        }\r\n    },\r\n    methods: {\r\n        // Vue Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\r\n        // the underlying DOM node ourselves. See the README for more information.\r\n        findDOMNode(): HTMLElement {\r\n            return this.$refs && this.$refs.element ? this.$ref.element : this.$el;\r\n        },\r\n        handleDragStart(e: MouseTouchEvent) {\r\n            // Make it possible to attach event handlers on top of this one.\r\n            this.$emit('mousedown', e);\r\n\r\n            // Only accept left-clicks.\r\n            if (!this.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\r\n\r\n            // Get nodes. Be sure to grab relative document (could be iframed)\r\n            const thisNode = this.findDOMNode();\r\n            if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\r\n                throw new Error('<DraggableCore> not mounted on DragStart!');\r\n            }\r\n            const { ownerDocument } = thisNode;\r\n\r\n            // Short circuit if handle or cancel prop was provided and selector doesn't match.\r\n            if (\r\n                this.disabled ||\r\n                !(e.target instanceof (ownerDocument.defaultView as any).Node) ||\r\n                (this.handle && !matchesSelectorAndParentsTo(e.target as Node, this.handle, thisNode)) ||\r\n                (this.cancel && matchesSelectorAndParentsTo(e.target as Node, this.cancel, thisNode))\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // Prevent scrolling on mobile devices, like ipad/iphone.\r\n            // Important that this is after handle/cancel.\r\n            if (e.type === 'touchstart') e.preventDefault();\r\n\r\n            // Set touch identifier in component state if this is a touch event. This allows us to\r\n            // distinguish between individual touches on multitouch screens by identifying which\r\n            // touchpoint was set to this element.\r\n            const touchIdentifier = getTouchIdentifier(e);\r\n            this.touchIdentifier = getTouchIdentifier(e);\r\n\r\n            // Get the current drag point from the event. This is used as the offset.\r\n            const position = getControlPosition(e, touchIdentifier, this);\r\n            if (position == null) return;\r\n            const { x, y } = position;\r\n\r\n            // Create an event object with all the data parents need to make a decision here.\r\n            const coreEvent = createCoreData(this as any, x, y);\r\n\r\n            log('DraggableCore: handleDragStart: %j', coreEvent);\r\n\r\n            // Call event handler. If it returns explicit false, cancel.\r\n            log('emitting @dragStart', coreEvent, e);\r\n            const shouldUpdate = this.$emit('dragStart', coreEvent, e);\r\n            if (shouldUpdate === false || this.mounted === false) return;\r\n\r\n            // Add a style to the body to disable user-select. This prevents text from\r\n            // being selected all over the page.\r\n            if (this.enableUserSelectHack) addUserSelectStyles(ownerDocument);\r\n\r\n            // Initiate dragging. Set the current x and y as offsets\r\n            // so we know how much we've moved during the drag. This allows us\r\n            // to drag elements around even if they have been moved, without issue.\r\n            this.dragging = true;\r\n            this.lastX = x;\r\n            this.lastY = y;\r\n\r\n            // Add events to the document directly so we catch when the user's mouse/touch moves outside of\r\n            // this element. We use different events depending on whether or not we have detected that this\r\n            // is a touch-capable device.\r\n            addEvent(ownerDocument, dragEventFor.move, this.handleDrag);\r\n            addEvent(ownerDocument, dragEventFor.stop, this.handleDragStop);\r\n        },\r\n        handleDrag(e: MouseTouchEvent) {\r\n            // Get the current drag point from the event. This is used as the offset.\r\n            const position = getControlPosition(e, this.touchIdentifier, this as any);\r\n            if (position == null) return;\r\n            let { x, y } = position;\r\n\r\n            // Snap to grid if prop has been provided\r\n            if (Array.isArray(this.grid)) {\r\n                let deltaX = x - this.lastX,\r\n                    deltaY = y - this.lastY;\r\n                [deltaX, deltaY] = snapToGrid(this.grid, deltaX, deltaY);\r\n                if (!deltaX && !deltaY) return; // skip useless drag\r\n                (x = this.lastX + deltaX), (y = this.lastY + deltaY);\r\n            }\r\n\r\n            const coreEvent = createCoreData(this, x, y);\r\n\r\n            log('DraggableCore: handleDrag: %j', coreEvent);\r\n\r\n            // Call event handler. If it returns explicit false, cancel.\r\n            log('emitting @drag', coreEvent, e);\r\n            const shouldUpdate = this.$emit('drag', coreEvent, e);\r\n            if (shouldUpdate === false || this.mounted === false) {\r\n                try {\r\n                    this.handleDragStop(new MouseEvent('mouseup') as MouseTouchEvent);\r\n                } catch (err) {\r\n                    // Old browsers\r\n                    const event = (document.createEvent('MouseEvents') as any) as MouseEvent;\r\n                    // I see why this insanity was deprecated\r\n                    event.initMouseEvent(\r\n                        'mouseup',\r\n                        true,\r\n                        true,\r\n                        window,\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                        0,\r\n                        null\r\n                    );\r\n                    this.handleDragStop(event as MouseTouchEvent);\r\n                }\r\n                return;\r\n            }\r\n\r\n            this.lastX = x;\r\n            this.lastY = y;\r\n        },\r\n        handleDragStop(e: MouseTouchEvent) {\r\n            if (!this.dragging) return;\r\n\r\n            const position = getControlPosition(e, this.touchIdentifier, this as any);\r\n            if (position == null) return;\r\n            const { x, y } = position;\r\n            const coreEvent = createCoreData(this as any, x, y);\r\n\r\n            // Call event handler. If it returns explicit false, cancel.\r\n            log('emitting @dragStop', coreEvent, e);\r\n            const shouldContinue = this.$emit('dragStop', coreEvent, e);\r\n            if (shouldContinue === false || this.mounted === false) return false;\r\n\r\n            const thisNode = this.findDOMNode();\r\n            if (thisNode) {\r\n                // Remove user-select hack\r\n                if (this.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\r\n            }\r\n\r\n            log('DraggableCore: handleDragStop: %j', coreEvent);\r\n\r\n            // Reset the el.\r\n            this.dragging = false;\r\n            this.lastX = NaN;\r\n            this.lastY = NaN;\r\n\r\n            if (thisNode) {\r\n                // Remove event handlers\r\n                log('DraggableCore: Removing handlers');\r\n                removeEvent(thisNode.ownerDocument, dragEventFor.move, this.handleDrag);\r\n                removeEvent(thisNode.ownerDocument, dragEventFor.stop, this.handleDragStop);\r\n            }\r\n        },\r\n        mouseDown(e: MouseTouchEvent) {\r\n            dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\r\n\r\n            return this.handleDragStart(e);\r\n        },\r\n        mouseUp(e: MouseTouchEvent) {\r\n            dragEventFor = eventsFor.mouse;\r\n\r\n            return this.handleDragStop(e);\r\n        },\r\n        // Same as onMouseDown (start drag), but now consider this a touch device.\r\n        touchStart(e: MouseTouchEvent) {\r\n            // We're on a touch device now, so change the event handlers\r\n            dragEventFor = eventsFor.touch;\r\n\r\n            return this.handleDragStart(e);\r\n        },\r\n        touchEnd(e: MouseTouchEvent) {\r\n            // We're on a touch device now, so change the event handlers\r\n            dragEventFor = eventsFor.touch;\r\n\r\n            return this.handleDragStop(e);\r\n        },\r\n        children(h: CreateElement): VNode | VNode[] {\r\n            if (this.$scopedSlots.default) {\r\n                return this.$scopedSlots.default({\r\n                    mouseDown: this.mouseDown,\r\n                    mouseUp: this.mouseUp,\r\n                    touchEnd: this.touchEnd\r\n                });\r\n            }\r\n            if (this.$slots.default) {\r\n                return this.$slots.default;\r\n            }\r\n            return h('div');\r\n        }\r\n    },\r\n    render(h): VNode {\r\n        const children = this.children(h);\r\n        if (Array.isArray(children)) {\r\n            return children[0];\r\n        }\r\n        return children;\r\n    }\r\n});\r\n"],"names":["findInArray","array","cb","i","length","apply","isFunction","func","Object","prototype","toString","call","isNum","num","isNaN","matchesSelectorFunc","matchesSelector","el","selector","method","matchesSelectorAndParentsTo","baseNode","node","parentNode","addEvent","event","handler","inputOptions","options","capture","addEventListener","attachEvent","removeEvent","removeEventListener","detachEvent","offsetXYFromParent","evt","offsetParent","scale","isBody","ownerDocument","body","offsetParentRect","left","top","getBoundingClientRect","x","clientX","scrollLeft","y","clientY","scrollTop","getTouch","e","identifier","targetTouches","t","changedTouches","getTouchIdentifier","addUserSelectStyles","doc","styleEl","getElementById","createElement","type","id","innerHTML","getElementsByTagName","appendChild","addClassName","removeUserSelectStyles","removeClassName","selection","getSelection","empty","defaultView","window","removeAllRanges","className","classList","add","match","RegExp","remove","replace","snapToGrid","grid","pendingX","pendingY","Math","round","getControlPosition","touchIdentifier","draggableCore","touchObj","findDOMNode","createCoreData","draggable","state","isStart","lastX","deltaX","deltaY","lastY","Error","eventsFor","touch","start","move","stop","mouse","dragEventFor","Vue","extend","name","props","allowAnyClick","Boolean","disabled","enableUserSelectHack","validator","value","nodeType","Array","handle","String","cancel","Number","data","mounted","dragging","NaN","thisNode","$slots","mouseDown","mouseUp","touchEnd","touchStart","passive","beforeDestroy","handleDrag","handleDragStop","methods","$refs","element","$ref","$el","handleDragStart","$emit","button","target","Node","preventDefault","position","coreEvent","shouldUpdate","isArray","MouseEvent","err","document","createEvent","initMouseEvent","shouldContinue","children","h","$scopedSlots","render"],"mappings":"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"}